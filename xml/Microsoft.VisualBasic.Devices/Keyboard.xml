<Type Name="Keyboard" FullName="Microsoft.VisualBasic.Devices.Keyboard">
  <Metadata><Meta Name="ms.openlocfilehash" Value="38f07b1fefc57d3a00e0f314531cae7ecc2bafd6" /><Meta Name="ms.sourcegitcommit" Value="b0947fed0227b6b2e292d7efb43705b488b130aa" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="04/29/2020" /><Meta Name="ms.locfileid" Value="82471029" /></Metadata><TypeSignature Language="C#" Value="public class Keyboard" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi Keyboard extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.VisualBasic.Devices.Keyboard" />
  <TypeSignature Language="VB.NET" Value="Public Class Keyboard" />
  <TypeSignature Language="C++ CLI" Value="public ref class Keyboard" />
  <TypeSignature Language="F#" Value="type Keyboard = class" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.VisualBasic</AssemblyName>
    <AssemblyVersion>8.0.0.0</AssemblyVersion>
    <AssemblyVersion>10.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
    <AssemblyVersion>10.0.4.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>Microsoft.VisualBasic.Forms</AssemblyName>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="e8c24-101">提供了用于访问键盘当前状态（如当前按下了哪些键）的属性，并提供了用于将击键发送到活动窗口的方法。</span><span class="sxs-lookup"><span data-stu-id="e8c24-101">Provides properties for accessing the current state of the keyboard, such as what keys are currently pressed, and provides a method to send keystrokes to the active window.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e8c24-102">`My.Computer.Keyboard` 对象提供了计算机键盘的接口。</span><span class="sxs-lookup"><span data-stu-id="e8c24-102">The `My.Computer.Keyboard` object provides an interface to the computer's keyboard.</span></span> <span data-ttu-id="e8c24-103">`My.Computer.Keyboard` 的属性提供有关多个特殊键的状态的信息。</span><span class="sxs-lookup"><span data-stu-id="e8c24-103">The properties of the `My.Computer.Keyboard` provide information about the state of several special keys.</span></span> <span data-ttu-id="e8c24-104">利用 `My.Computer.Keyboard.SendKeys` 方法，你可以将密钥发送到活动窗口，就像在键盘上键入一样。</span><span class="sxs-lookup"><span data-stu-id="e8c24-104">The `My.Computer.Keyboard.SendKeys` method lets you send keys to the active window as if they have been typed at the keyboard.</span></span>  
  
## <a name="tasks"></a><span data-ttu-id="e8c24-105">任务</span><span class="sxs-lookup"><span data-stu-id="e8c24-105">Tasks</span></span>  
 <span data-ttu-id="e8c24-106">下表列出了涉及 `My.Computer.Keyboard` 对象的任务的示例。</span><span class="sxs-lookup"><span data-stu-id="e8c24-106">The following table lists an example of a task involving the `My.Computer.Keyboard` object.</span></span>  
  
|<span data-ttu-id="e8c24-107">功能</span><span class="sxs-lookup"><span data-stu-id="e8c24-107">To</span></span>|<span data-ttu-id="e8c24-108">查看</span><span class="sxs-lookup"><span data-stu-id="e8c24-108">See</span></span>|  
|-|-|  
|<span data-ttu-id="e8c24-109">向应用程序发送键击</span><span class="sxs-lookup"><span data-stu-id="e8c24-109">Send keystrokes to an application</span></span>|[<span data-ttu-id="e8c24-110">如何：启动应用程序并向其发送击键 (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="e8c24-110">How to: Start an Application and Send it Keystrokes (Visual Basic)</span></span>](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-start-an-application-and-send-it-keystrokes.md)|  
  
## <a name="availability-by-project-type"></a><span data-ttu-id="e8c24-111">按项目类型的可用性</span><span class="sxs-lookup"><span data-stu-id="e8c24-111">Availability by Project Type</span></span>  
  
|<span data-ttu-id="e8c24-112">项目类型</span><span class="sxs-lookup"><span data-stu-id="e8c24-112">Project type</span></span>|<span data-ttu-id="e8c24-113">可用</span><span class="sxs-lookup"><span data-stu-id="e8c24-113">Available</span></span>|  
|-|-|  
|<span data-ttu-id="e8c24-114">Windows 应用程序</span><span class="sxs-lookup"><span data-stu-id="e8c24-114">Windows Application</span></span>|<span data-ttu-id="e8c24-115">**是**</span><span class="sxs-lookup"><span data-stu-id="e8c24-115">**Yes**</span></span>|  
|<span data-ttu-id="e8c24-116">类库</span><span class="sxs-lookup"><span data-stu-id="e8c24-116">Class Library</span></span>|<span data-ttu-id="e8c24-117">**是**</span><span class="sxs-lookup"><span data-stu-id="e8c24-117">**Yes**</span></span>|  
|<span data-ttu-id="e8c24-118">控制台应用程序</span><span class="sxs-lookup"><span data-stu-id="e8c24-118">Console Application</span></span>|<span data-ttu-id="e8c24-119">**是**</span><span class="sxs-lookup"><span data-stu-id="e8c24-119">**Yes**</span></span>|  
|<span data-ttu-id="e8c24-120">Windows 控件库</span><span class="sxs-lookup"><span data-stu-id="e8c24-120">Windows Control Library</span></span>|<span data-ttu-id="e8c24-121">**是**</span><span class="sxs-lookup"><span data-stu-id="e8c24-121">**Yes**</span></span>|  
|<span data-ttu-id="e8c24-122">Web 控件库</span><span class="sxs-lookup"><span data-stu-id="e8c24-122">Web Control Library</span></span>|<span data-ttu-id="e8c24-123">否</span><span class="sxs-lookup"><span data-stu-id="e8c24-123">No</span></span>|  
|<span data-ttu-id="e8c24-124">Windows 服务</span><span class="sxs-lookup"><span data-stu-id="e8c24-124">Windows Service</span></span>|<span data-ttu-id="e8c24-125">**是**</span><span class="sxs-lookup"><span data-stu-id="e8c24-125">**Yes**</span></span>|  
|<span data-ttu-id="e8c24-126">网站</span><span class="sxs-lookup"><span data-stu-id="e8c24-126">Web Site</span></span>|<span data-ttu-id="e8c24-127">否</span><span class="sxs-lookup"><span data-stu-id="e8c24-127">No</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="e8c24-128">此示例使用 `My.Computer.Keyboard.CtrlKeyDown` 属性来确定是否按下了计算机的 CTRL 键。</span><span class="sxs-lookup"><span data-stu-id="e8c24-128">This example uses the `My.Computer.Keyboard.CtrlKeyDown` property to determine if the computer's CTRL key is pressed.</span></span>  
  
 [!code-vb[VbVbalrMyComputer#36](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyComputer/VB/Class2.vb#36)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:Microsoft.VisualBasic.Devices.Computer" />
    <related type="Article" href="~/docs/visual-basic/language-reference/objects/index.md"><span data-ttu-id="e8c24-129">对象 (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="e8c24-129">Objects (Visual Basic)</span></span></related>
    <related type="Article" href="~/docs/visual-basic/developing-apps/programming/computer-resources/accessing-the-keyboard.md"><span data-ttu-id="e8c24-130">访问键盘 (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="e8c24-130">Accessing the Keyboard (Visual Basic)</span></span></related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Keyboard ();" />
      <MemberSignature Language="ILAsm" Value=".method public specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Devices.Keyboard.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Keyboard();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Forms</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="e8c24-131">初始化 <see cref="T:Microsoft.VisualBasic.Devices.Keyboard" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="e8c24-131">Initializes a new instance of the <see cref="T:Microsoft.VisualBasic.Devices.Keyboard" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:Microsoft.VisualBasic.Devices.Computer" />
        <related type="Article" href="~/docs/visual-basic/language-reference/objects/index.md"><span data-ttu-id="e8c24-132">对象 (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="e8c24-132">Objects (Visual Basic)</span></span></related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/computer-resources/accessing-the-keyboard.md"><span data-ttu-id="e8c24-133">访问键盘 (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="e8c24-133">Accessing the Keyboard (Visual Basic)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="AltKeyDown">
      <MemberSignature Language="C#" Value="public bool AltKeyDown { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AltKeyDown" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.Devices.Keyboard.AltKeyDown" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AltKeyDown As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AltKeyDown { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.AltKeyDown : bool" Usage="Microsoft.VisualBasic.Devices.Keyboard.AltKeyDown" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Forms</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e8c24-134">获取一个值，该值指示是否已按下 Alt。</span><span class="sxs-lookup"><span data-stu-id="e8c24-134">Gets a value that indicates whether the ALT key is down.</span></span></summary>
        <value><span data-ttu-id="e8c24-135"><see langword="True" /> 如果 ALT 键为关闭状态，则为; 否则为。否则，<see langword="False" />。</span><span class="sxs-lookup"><span data-stu-id="e8c24-135"><see langword="True" /> if the ALT key is down; otherwise, <see langword="False" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e8c24-136">`My.Computer.Keyboard.AltKeyDown` 属性提供类似于 <xref:System.Windows.Forms.Control.ModifierKeys%2A> 属性的功能。</span><span class="sxs-lookup"><span data-stu-id="e8c24-136">The `My.Computer.Keyboard.AltKeyDown` property provides functionality similar to the <xref:System.Windows.Forms.Control.ModifierKeys%2A> property.</span></span>  
  
## <a name="availability-by-project-type"></a><span data-ttu-id="e8c24-137">按项目类型的可用性</span><span class="sxs-lookup"><span data-stu-id="e8c24-137">Availability by Project Type</span></span>  
  
|<span data-ttu-id="e8c24-138">项目类型</span><span class="sxs-lookup"><span data-stu-id="e8c24-138">Project type</span></span>|<span data-ttu-id="e8c24-139">可用</span><span class="sxs-lookup"><span data-stu-id="e8c24-139">Available</span></span>|  
|-|-|  
|<span data-ttu-id="e8c24-140">Windows 应用程序</span><span class="sxs-lookup"><span data-stu-id="e8c24-140">Windows Application</span></span>|<span data-ttu-id="e8c24-141">**是**</span><span class="sxs-lookup"><span data-stu-id="e8c24-141">**Yes**</span></span>|  
|<span data-ttu-id="e8c24-142">类库</span><span class="sxs-lookup"><span data-stu-id="e8c24-142">Class Library</span></span>|<span data-ttu-id="e8c24-143">**是**</span><span class="sxs-lookup"><span data-stu-id="e8c24-143">**Yes**</span></span>|  
|<span data-ttu-id="e8c24-144">控制台应用程序</span><span class="sxs-lookup"><span data-stu-id="e8c24-144">Console Application</span></span>|<span data-ttu-id="e8c24-145">**是**</span><span class="sxs-lookup"><span data-stu-id="e8c24-145">**Yes**</span></span>|  
|<span data-ttu-id="e8c24-146">Windows 控件库</span><span class="sxs-lookup"><span data-stu-id="e8c24-146">Windows Control Library</span></span>|<span data-ttu-id="e8c24-147">**是**</span><span class="sxs-lookup"><span data-stu-id="e8c24-147">**Yes**</span></span>|  
|<span data-ttu-id="e8c24-148">Web 控件库</span><span class="sxs-lookup"><span data-stu-id="e8c24-148">Web Control Library</span></span>|<span data-ttu-id="e8c24-149">否</span><span class="sxs-lookup"><span data-stu-id="e8c24-149">No</span></span>|  
|<span data-ttu-id="e8c24-150">Windows 服务</span><span class="sxs-lookup"><span data-stu-id="e8c24-150">Windows Service</span></span>|<span data-ttu-id="e8c24-151">**是**</span><span class="sxs-lookup"><span data-stu-id="e8c24-151">**Yes**</span></span>|  
|<span data-ttu-id="e8c24-152">网站</span><span class="sxs-lookup"><span data-stu-id="e8c24-152">Web Site</span></span>|<span data-ttu-id="e8c24-153">否</span><span class="sxs-lookup"><span data-stu-id="e8c24-153">No</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="e8c24-154">此示例使用 `My.Computer.Keyboard.AltKeyDown` 属性来确定计算机的 ALT 键是否已关闭。</span><span class="sxs-lookup"><span data-stu-id="e8c24-154">This example uses the `My.Computer.Keyboard.AltKeyDown` property to determine if the computer's ALT key is down.</span></span>  
  
 [!code-vb[VbVbalrMyComputer#23](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyComputer/VB/Class2.vb#23)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.Devices.Computer" />
        <altmember cref="P:System.Windows.Forms.Control.ModifierKeys" />
        <related type="Article" href="~/docs/visual-basic/language-reference/objects/index.md"><span data-ttu-id="e8c24-155">对象 (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="e8c24-155">Objects (Visual Basic)</span></span></related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/computer-resources/accessing-the-keyboard.md"><span data-ttu-id="e8c24-156">访问键盘 (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="e8c24-156">Accessing the Keyboard (Visual Basic)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="CapsLock">
      <MemberSignature Language="C#" Value="public bool CapsLock { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CapsLock" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.Devices.Keyboard.CapsLock" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CapsLock As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool CapsLock { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CapsLock : bool" Usage="Microsoft.VisualBasic.Devices.Keyboard.CapsLock" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Forms</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>get: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e8c24-157">获取一个值，该值指示是否已打开 Caps Lock。</span><span class="sxs-lookup"><span data-stu-id="e8c24-157">Gets a value that indicates whether CAPS LOCK is turned on.</span></span></summary>
        <value><span data-ttu-id="e8c24-158"><see langword="Boolean" /> 值： <see langword="True" /> 是否启用 Caps Lock;否则，<see langword="False" />。</span><span class="sxs-lookup"><span data-stu-id="e8c24-158">A <see langword="Boolean" /> value: <see langword="True" /> if CAPS LOCK is turned on; otherwise, <see langword="False" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e8c24-159">仅返回 Caps Lock 的状态。</span><span class="sxs-lookup"><span data-stu-id="e8c24-159">Only the state of CAPS LOCK is returned.</span></span>  
  
## <a name="availability-by-project-type"></a><span data-ttu-id="e8c24-160">按项目类型的可用性</span><span class="sxs-lookup"><span data-stu-id="e8c24-160">Availability by Project Type</span></span>  
  
|<span data-ttu-id="e8c24-161">项目类型</span><span class="sxs-lookup"><span data-stu-id="e8c24-161">Project type</span></span>|<span data-ttu-id="e8c24-162">可用</span><span class="sxs-lookup"><span data-stu-id="e8c24-162">Available</span></span>|  
|-|-|  
|<span data-ttu-id="e8c24-163">Windows 应用程序</span><span class="sxs-lookup"><span data-stu-id="e8c24-163">Windows Application</span></span>|<span data-ttu-id="e8c24-164">**是**</span><span class="sxs-lookup"><span data-stu-id="e8c24-164">**Yes**</span></span>|  
|<span data-ttu-id="e8c24-165">类库</span><span class="sxs-lookup"><span data-stu-id="e8c24-165">Class Library</span></span>|<span data-ttu-id="e8c24-166">**是**</span><span class="sxs-lookup"><span data-stu-id="e8c24-166">**Yes**</span></span>|  
|<span data-ttu-id="e8c24-167">控制台应用程序</span><span class="sxs-lookup"><span data-stu-id="e8c24-167">Console Application</span></span>|<span data-ttu-id="e8c24-168">**是**</span><span class="sxs-lookup"><span data-stu-id="e8c24-168">**Yes**</span></span>|  
|<span data-ttu-id="e8c24-169">Windows 控件库</span><span class="sxs-lookup"><span data-stu-id="e8c24-169">Windows Control Library</span></span>|<span data-ttu-id="e8c24-170">**是**</span><span class="sxs-lookup"><span data-stu-id="e8c24-170">**Yes**</span></span>|  
|<span data-ttu-id="e8c24-171">Web 控件库</span><span class="sxs-lookup"><span data-stu-id="e8c24-171">Web Control Library</span></span>|<span data-ttu-id="e8c24-172">否</span><span class="sxs-lookup"><span data-stu-id="e8c24-172">No</span></span>|  
|<span data-ttu-id="e8c24-173">Windows 服务</span><span class="sxs-lookup"><span data-stu-id="e8c24-173">Windows Service</span></span>|<span data-ttu-id="e8c24-174">**是**</span><span class="sxs-lookup"><span data-stu-id="e8c24-174">**Yes**</span></span>|  
|<span data-ttu-id="e8c24-175">网站</span><span class="sxs-lookup"><span data-stu-id="e8c24-175">Web Site</span></span>|<span data-ttu-id="e8c24-176">否</span><span class="sxs-lookup"><span data-stu-id="e8c24-176">No</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="e8c24-177">此示例使用 `My.Computer.Keyboard.CapsLock` 属性来确定计算机的 Caps Lock 是否打开。</span><span class="sxs-lookup"><span data-stu-id="e8c24-177">This example uses the `My.Computer.Keyboard.CapsLock` property to determine if the computer's CAPS LOCK is turned on.</span></span>  
  
 [!code-vb[VbVbalrMyComputer#50](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyComputer/VB/Class2.vb#50)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.Devices.Computer" />
        <related type="Article" href="~/docs/visual-basic/language-reference/objects/index.md"><span data-ttu-id="e8c24-178">对象 (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="e8c24-178">Objects (Visual Basic)</span></span></related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/computer-resources/accessing-the-keyboard.md"><span data-ttu-id="e8c24-179">访问键盘 (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="e8c24-179">Accessing the Keyboard (Visual Basic)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="CtrlKeyDown">
      <MemberSignature Language="C#" Value="public bool CtrlKeyDown { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CtrlKeyDown" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.Devices.Keyboard.CtrlKeyDown" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CtrlKeyDown As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool CtrlKeyDown { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CtrlKeyDown : bool" Usage="Microsoft.VisualBasic.Devices.Keyboard.CtrlKeyDown" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Forms</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e8c24-180">获取一个值，该值指示是否已按下 Ctrl。</span><span class="sxs-lookup"><span data-stu-id="e8c24-180">Gets a value that indicates whether a CTRL key is down.</span></span></summary>
        <value><span data-ttu-id="e8c24-181"><see langword="True" /> 如果按下 CTRL 键，则为; 否则为。否则，<see langword="False" />。</span><span class="sxs-lookup"><span data-stu-id="e8c24-181"><see langword="True" /> if a CTRL key is down; otherwise, <see langword="False" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e8c24-182">`My.Computer.Keyboard.CtrlKeyDown` 属性提供类似于 <xref:System.Windows.Forms.Control.ModifierKeys%2A> 属性的功能。</span><span class="sxs-lookup"><span data-stu-id="e8c24-182">The `My.Computer.Keyboard.CtrlKeyDown` property provides functionality similar to the <xref:System.Windows.Forms.Control.ModifierKeys%2A> property.</span></span>  
  
## <a name="availability-by-project-type"></a><span data-ttu-id="e8c24-183">按项目类型的可用性</span><span class="sxs-lookup"><span data-stu-id="e8c24-183">Availability by Project Type</span></span>  
  
|<span data-ttu-id="e8c24-184">项目类型</span><span class="sxs-lookup"><span data-stu-id="e8c24-184">Project type</span></span>|<span data-ttu-id="e8c24-185">可用</span><span class="sxs-lookup"><span data-stu-id="e8c24-185">Available</span></span>|  
|-|-|  
|<span data-ttu-id="e8c24-186">Windows 应用程序</span><span class="sxs-lookup"><span data-stu-id="e8c24-186">Windows Application</span></span>|<span data-ttu-id="e8c24-187">**是**</span><span class="sxs-lookup"><span data-stu-id="e8c24-187">**Yes**</span></span>|  
|<span data-ttu-id="e8c24-188">类库</span><span class="sxs-lookup"><span data-stu-id="e8c24-188">Class Library</span></span>|<span data-ttu-id="e8c24-189">**是**</span><span class="sxs-lookup"><span data-stu-id="e8c24-189">**Yes**</span></span>|  
|<span data-ttu-id="e8c24-190">控制台应用程序</span><span class="sxs-lookup"><span data-stu-id="e8c24-190">Console Application</span></span>|<span data-ttu-id="e8c24-191">**是**</span><span class="sxs-lookup"><span data-stu-id="e8c24-191">**Yes**</span></span>|  
|<span data-ttu-id="e8c24-192">Windows 控件库</span><span class="sxs-lookup"><span data-stu-id="e8c24-192">Windows Control Library</span></span>|<span data-ttu-id="e8c24-193">**是**</span><span class="sxs-lookup"><span data-stu-id="e8c24-193">**Yes**</span></span>|  
|<span data-ttu-id="e8c24-194">Web 控件库</span><span class="sxs-lookup"><span data-stu-id="e8c24-194">Web Control Library</span></span>|<span data-ttu-id="e8c24-195">否</span><span class="sxs-lookup"><span data-stu-id="e8c24-195">No</span></span>|  
|<span data-ttu-id="e8c24-196">Windows 服务</span><span class="sxs-lookup"><span data-stu-id="e8c24-196">Windows Service</span></span>|<span data-ttu-id="e8c24-197">**是**</span><span class="sxs-lookup"><span data-stu-id="e8c24-197">**Yes**</span></span>|  
|<span data-ttu-id="e8c24-198">网站</span><span class="sxs-lookup"><span data-stu-id="e8c24-198">Web Site</span></span>|<span data-ttu-id="e8c24-199">否</span><span class="sxs-lookup"><span data-stu-id="e8c24-199">No</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="e8c24-200">此示例使用 `My.Computer.Keyboard.CtrlKeyDown` 属性来确定计算机的 CTRL 键是否已关闭。</span><span class="sxs-lookup"><span data-stu-id="e8c24-200">This example uses the `My.Computer.Keyboard.CtrlKeyDown` property to determine if the computer's CTRL key is down.</span></span>  
  
 [!code-vb[VbVbalrMyComputer#34](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyComputer/VB/Class2.vb#34)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.Devices.Computer" />
        <altmember cref="P:System.Windows.Forms.Control.ModifierKeys" />
        <related type="Article" href="~/docs/visual-basic/language-reference/objects/index.md"><span data-ttu-id="e8c24-201">对象 (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="e8c24-201">Objects (Visual Basic)</span></span></related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/computer-resources/accessing-the-keyboard.md"><span data-ttu-id="e8c24-202">访问键盘 (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="e8c24-202">Accessing the Keyboard (Visual Basic)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="NumLock">
      <MemberSignature Language="C#" Value="public bool NumLock { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool NumLock" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.Devices.Keyboard.NumLock" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property NumLock As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool NumLock { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.NumLock : bool" Usage="Microsoft.VisualBasic.Devices.Keyboard.NumLock" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Forms</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>get: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e8c24-203">获取一个值，该值指示是否已打开 Num Lock。</span><span class="sxs-lookup"><span data-stu-id="e8c24-203">Gets a value that indicates whether the NUM LOCK key is on.</span></span></summary>
        <value><span data-ttu-id="e8c24-204"><see langword="True" /> NUM LOCK on，则为;否则，<see langword="False" />。</span><span class="sxs-lookup"><span data-stu-id="e8c24-204"><see langword="True" /> if NUM LOCK is on; otherwise, <see langword="False" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e8c24-205">仅返回 NUM LOCK 键的状态。</span><span class="sxs-lookup"><span data-stu-id="e8c24-205">Only the state of the NUM LOCK key is returned.</span></span>  
  
## <a name="availability-by-project-type"></a><span data-ttu-id="e8c24-206">按项目类型的可用性</span><span class="sxs-lookup"><span data-stu-id="e8c24-206">Availability by Project Type</span></span>  
  
|<span data-ttu-id="e8c24-207">项目类型</span><span class="sxs-lookup"><span data-stu-id="e8c24-207">Project type</span></span>|<span data-ttu-id="e8c24-208">可用</span><span class="sxs-lookup"><span data-stu-id="e8c24-208">Available</span></span>|  
|-|-|  
|<span data-ttu-id="e8c24-209">Windows 应用程序</span><span class="sxs-lookup"><span data-stu-id="e8c24-209">Windows Application</span></span>|<span data-ttu-id="e8c24-210">**是**</span><span class="sxs-lookup"><span data-stu-id="e8c24-210">**Yes**</span></span>|  
|<span data-ttu-id="e8c24-211">类库</span><span class="sxs-lookup"><span data-stu-id="e8c24-211">Class Library</span></span>|<span data-ttu-id="e8c24-212">**是**</span><span class="sxs-lookup"><span data-stu-id="e8c24-212">**Yes**</span></span>|  
|<span data-ttu-id="e8c24-213">控制台应用程序</span><span class="sxs-lookup"><span data-stu-id="e8c24-213">Console Application</span></span>|<span data-ttu-id="e8c24-214">**是**</span><span class="sxs-lookup"><span data-stu-id="e8c24-214">**Yes**</span></span>|  
|<span data-ttu-id="e8c24-215">Windows 控件库</span><span class="sxs-lookup"><span data-stu-id="e8c24-215">Windows Control Library</span></span>|<span data-ttu-id="e8c24-216">**是**</span><span class="sxs-lookup"><span data-stu-id="e8c24-216">**Yes**</span></span>|  
|<span data-ttu-id="e8c24-217">Web 控件库</span><span class="sxs-lookup"><span data-stu-id="e8c24-217">Web Control Library</span></span>|<span data-ttu-id="e8c24-218">否</span><span class="sxs-lookup"><span data-stu-id="e8c24-218">No</span></span>|  
|<span data-ttu-id="e8c24-219">Windows 服务</span><span class="sxs-lookup"><span data-stu-id="e8c24-219">Windows Service</span></span>|<span data-ttu-id="e8c24-220">**是**</span><span class="sxs-lookup"><span data-stu-id="e8c24-220">**Yes**</span></span>|  
|<span data-ttu-id="e8c24-221">网站</span><span class="sxs-lookup"><span data-stu-id="e8c24-221">Web Site</span></span>|<span data-ttu-id="e8c24-222">否</span><span class="sxs-lookup"><span data-stu-id="e8c24-222">No</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="e8c24-223">此示例使用 `My.Computer.Keyboard.NumLock` 属性来确定计算机的 NUM LOCK 键是否已打开。</span><span class="sxs-lookup"><span data-stu-id="e8c24-223">This example uses the `My.Computer.Keyboard.NumLock` property to determine if the computer's NUM LOCK key is on.</span></span>  
  
 [!code-vb[VbVbalrMyComputer#48](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyComputer/VB/Class2.vb#48)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.Devices.Computer" />
        <related type="Article" href="~/docs/visual-basic/language-reference/objects/index.md"><span data-ttu-id="e8c24-224">对象 (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="e8c24-224">Objects (Visual Basic)</span></span></related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/computer-resources/accessing-the-keyboard.md"><span data-ttu-id="e8c24-225">访问键盘 (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="e8c24-225">Accessing the Keyboard (Visual Basic)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="ScrollLock">
      <MemberSignature Language="C#" Value="public bool ScrollLock { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ScrollLock" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.Devices.Keyboard.ScrollLock" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ScrollLock As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ScrollLock { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.ScrollLock : bool" Usage="Microsoft.VisualBasic.Devices.Keyboard.ScrollLock" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Forms</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>get: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e8c24-226">获取一个 <see langword="Boolean" />，该值指示 Scroll Lock 键是否已打开。</span><span class="sxs-lookup"><span data-stu-id="e8c24-226">Gets a <see langword="Boolean" /> indicating whether the SCROLL LOCK key is on.</span></span></summary>
        <value><span data-ttu-id="e8c24-227"><see langword="True" />，则为; 否则为。否则，<see langword="False" />。</span><span class="sxs-lookup"><span data-stu-id="e8c24-227"><see langword="True" /> if SCROLL LOCK is on; otherwise, <see langword="False" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e8c24-228">仅返回 SCROLL LOCK 键的状态。</span><span class="sxs-lookup"><span data-stu-id="e8c24-228">Only the state of the SCROLL LOCK key is returned.</span></span>  
  
## <a name="availability-by-project-type"></a><span data-ttu-id="e8c24-229">按项目类型的可用性</span><span class="sxs-lookup"><span data-stu-id="e8c24-229">Availability by Project Type</span></span>  
  
|<span data-ttu-id="e8c24-230">项目类型</span><span class="sxs-lookup"><span data-stu-id="e8c24-230">Project type</span></span>|<span data-ttu-id="e8c24-231">可用</span><span class="sxs-lookup"><span data-stu-id="e8c24-231">Available</span></span>|  
|-|-|  
|<span data-ttu-id="e8c24-232">Windows 应用程序</span><span class="sxs-lookup"><span data-stu-id="e8c24-232">Windows Application</span></span>|<span data-ttu-id="e8c24-233">**是**</span><span class="sxs-lookup"><span data-stu-id="e8c24-233">**Yes**</span></span>|  
|<span data-ttu-id="e8c24-234">类库</span><span class="sxs-lookup"><span data-stu-id="e8c24-234">Class Library</span></span>|<span data-ttu-id="e8c24-235">**是**</span><span class="sxs-lookup"><span data-stu-id="e8c24-235">**Yes**</span></span>|  
|<span data-ttu-id="e8c24-236">控制台应用程序</span><span class="sxs-lookup"><span data-stu-id="e8c24-236">Console Application</span></span>|<span data-ttu-id="e8c24-237">**是**</span><span class="sxs-lookup"><span data-stu-id="e8c24-237">**Yes**</span></span>|  
|<span data-ttu-id="e8c24-238">Windows 控件库</span><span class="sxs-lookup"><span data-stu-id="e8c24-238">Windows Control Library</span></span>|<span data-ttu-id="e8c24-239">**是**</span><span class="sxs-lookup"><span data-stu-id="e8c24-239">**Yes**</span></span>|  
|<span data-ttu-id="e8c24-240">Web 控件库</span><span class="sxs-lookup"><span data-stu-id="e8c24-240">Web Control Library</span></span>|<span data-ttu-id="e8c24-241">否</span><span class="sxs-lookup"><span data-stu-id="e8c24-241">No</span></span>|  
|<span data-ttu-id="e8c24-242">Windows 服务</span><span class="sxs-lookup"><span data-stu-id="e8c24-242">Windows Service</span></span>|<span data-ttu-id="e8c24-243">**是**</span><span class="sxs-lookup"><span data-stu-id="e8c24-243">**Yes**</span></span>|  
|<span data-ttu-id="e8c24-244">网站</span><span class="sxs-lookup"><span data-stu-id="e8c24-244">Web Site</span></span>|<span data-ttu-id="e8c24-245">否</span><span class="sxs-lookup"><span data-stu-id="e8c24-245">No</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="e8c24-246">此示例使用 `My.Computer.Keyboard.ScrollLock` 属性来确定计算机的 SCROLL LOCK 键是否已打开。</span><span class="sxs-lookup"><span data-stu-id="e8c24-246">This example uses the `My.Computer.Keyboard.ScrollLock` property to determine if the computer's SCROLL LOCK key is on.</span></span>  
  
 [!code-vb[VbVbalrMyComputer#31](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyComputer/VB/Class2.vb#31)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.Devices.Computer" />
        <related type="Article" href="~/docs/visual-basic/language-reference/objects/index.md"><span data-ttu-id="e8c24-247">对象 (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="e8c24-247">Objects (Visual Basic)</span></span></related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/computer-resources/accessing-the-keyboard.md"><span data-ttu-id="e8c24-248">访问键盘 (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="e8c24-248">Accessing the Keyboard (Visual Basic)</span></span></related>
      </Docs>
    </Member>
    <MemberGroup MemberName="SendKeys">
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="e8c24-249">向活动窗口发送一个或多个键击，就像在键盘键入一样。</span><span class="sxs-lookup"><span data-stu-id="e8c24-249">Sends one or more keystrokes to the active window, as if typed on the keyboard.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="SendKeys">
      <MemberSignature Language="C#" Value="public void SendKeys (string keys);" />
      <MemberSignature Language="ILAsm" Value=".method public instance void SendKeys(string keys) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Devices.Keyboard.SendKeys(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SendKeys (keys As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SendKeys(System::String ^ keys);" />
      <MemberSignature Language="F#" Value="member this.SendKeys : string -&gt; unit" Usage="keyboard.SendKeys keys" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Forms</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keys" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="keys"><span data-ttu-id="e8c24-250">一个 <see langword="String" />，定义要发送的键。</span><span class="sxs-lookup"><span data-stu-id="e8c24-250">A <see langword="String" /> that defines the keys to send.</span></span></param>
        <summary><span data-ttu-id="e8c24-251">向活动窗口发送一个或多个键击，就像在键盘键入一样。</span><span class="sxs-lookup"><span data-stu-id="e8c24-251">Sends one or more keystrokes to the active window, as if typed on the keyboard.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e8c24-252">`My.Computer.Keyboard.SendKeys` 方法提供类似于 <xref:System.Windows.Forms.SendKeys.Send%2A> 和 <xref:System.Windows.Forms.SendKeys.SendWait%2A> 方法的功能。</span><span class="sxs-lookup"><span data-stu-id="e8c24-252">The `My.Computer.Keyboard.SendKeys` method provides functionality similar to the <xref:System.Windows.Forms.SendKeys.Send%2A> and <xref:System.Windows.Forms.SendKeys.SendWait%2A> methods.</span></span>  
  
 <span data-ttu-id="e8c24-253">如果其他应用程序必须在应用程序继续之前完成，则 `wait` 参数非常有用。</span><span class="sxs-lookup"><span data-stu-id="e8c24-253">The `wait` argument is useful if the other application must finish before your application can continue.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="e8c24-254">由于没有用于激活其他应用程序的托管方法，因此你可以在当前应用程序中使用此类，手动选择要将密钥发送到的窗口，或者使用 Windows API 方法（如 `FindWindow` 和 `SetForegroundWindow`）强制集中于其他应用程序。</span><span class="sxs-lookup"><span data-stu-id="e8c24-254">Because there is no managed method to activate another application, you can either use this class within the current application, manually select the window to send the keys to, or use Windows API methods, such as `FindWindow` and `SetForegroundWindow`, to force focus on other applications.</span></span> <span data-ttu-id="e8c24-255">有关详细信息，请参阅[演练：调用 Windows api](~/docs/visual-basic/programming-guide/com-interop/walkthrough-calling-windows-apis.md)。</span><span class="sxs-lookup"><span data-stu-id="e8c24-255">For more information, see [Walkthrough: Calling Windows APIs](~/docs/visual-basic/programming-guide/com-interop/walkthrough-calling-windows-apis.md).</span></span>  
  
 <span data-ttu-id="e8c24-256">`keys` 参数可以指定任何单个键或与 ALT、CTRL 或 SHIFT （或这些键的任意组合）组合的键。</span><span class="sxs-lookup"><span data-stu-id="e8c24-256">The `keys` argument can specify any single key or any key combined with ALT, CTRL, or SHIFT (or any combination of those keys).</span></span> <span data-ttu-id="e8c24-257">每个键由一个或多个字符表示，例如字符 "a" 的 `a` 或 ENTER 键 `{ENTER}`。</span><span class="sxs-lookup"><span data-stu-id="e8c24-257">Each key is represented by one or more characters, such as `a` for the character "a", or `{ENTER}` for the ENTER key.</span></span>  
  
 <span data-ttu-id="e8c24-258">若要将某个键与 SHIFT 组合在一起，请在键代码前面加上 `+` （加号）。</span><span class="sxs-lookup"><span data-stu-id="e8c24-258">To combine a key with SHIFT, precede the key code with `+` (plus sign).</span></span> <span data-ttu-id="e8c24-259">若要将某个键与 CTRL 组合，请在键代码前面加上 `^` （插入符号）。</span><span class="sxs-lookup"><span data-stu-id="e8c24-259">To combine a key with CTRL, precede the key code with `^` (caret).</span></span> <span data-ttu-id="e8c24-260">若要将某个键与 ALT 组合在一起，请在键代码前面加上 `%` （百分号）。</span><span class="sxs-lookup"><span data-stu-id="e8c24-260">To combine a key with ALT, precede the key code with `%` (percent sign).</span></span> <span data-ttu-id="e8c24-261">若要指定重复项，请使用格式 `{`*键号*`}`。</span><span class="sxs-lookup"><span data-stu-id="e8c24-261">To specify repeating keys, use the form `{`*key number*`}`.</span></span> <span data-ttu-id="e8c24-262">必须在*键*和*数字*之间添加一个空格。</span><span class="sxs-lookup"><span data-stu-id="e8c24-262">You must put a space between *key* and *number*.</span></span> <span data-ttu-id="e8c24-263">例如，`{LEFT 42}` 表示 "按左箭头键42次";`{h 10}` 表示 "按" h "10 次"。</span><span class="sxs-lookup"><span data-stu-id="e8c24-263">For example, `{LEFT 42}` means "press the LEFT ARROW key 42 times"; `{h 10}` means "press 'h' 10 times."</span></span>  
  
 <span data-ttu-id="e8c24-264">下表列出了一些代码，这些代码可用于指定在按对应键（例如 ENTER 或 TAB）时不显示的字符。</span><span class="sxs-lookup"><span data-stu-id="e8c24-264">The following table lists the codes that can be used to specify characters that are not displayed when you press the corresponding key (such as ENTER or TAB).</span></span>  
  
|<span data-ttu-id="e8c24-265">键</span><span class="sxs-lookup"><span data-stu-id="e8c24-265">Key</span></span>|<span data-ttu-id="e8c24-266">代码</span><span class="sxs-lookup"><span data-stu-id="e8c24-266">Code</span></span>|  
|-|-|  
|<span data-ttu-id="e8c24-267">Backspace</span><span class="sxs-lookup"><span data-stu-id="e8c24-267">BACKSPACE</span></span>|<span data-ttu-id="e8c24-268">{BACKSPACE} 或 {BS.1770}</span><span class="sxs-lookup"><span data-stu-id="e8c24-268">{BACKSPACE} or {BS}</span></span>|  
|<span data-ttu-id="e8c24-269">BREAK</span><span class="sxs-lookup"><span data-stu-id="e8c24-269">BREAK</span></span>|<span data-ttu-id="e8c24-270">{BREAK}</span><span class="sxs-lookup"><span data-stu-id="e8c24-270">{BREAK}</span></span>|  
|<span data-ttu-id="e8c24-271">Caps Lock</span><span class="sxs-lookup"><span data-stu-id="e8c24-271">CAPS LOCK</span></span>|<span data-ttu-id="e8c24-272">{CAPSLOCK}</span><span class="sxs-lookup"><span data-stu-id="e8c24-272">{CAPSLOCK}</span></span>|  
|<span data-ttu-id="e8c24-273">CLEAR</span><span class="sxs-lookup"><span data-stu-id="e8c24-273">CLEAR</span></span>|<span data-ttu-id="e8c24-274">清除</span><span class="sxs-lookup"><span data-stu-id="e8c24-274">{CLEAR}</span></span>|  
|<span data-ttu-id="e8c24-275">删除</span><span class="sxs-lookup"><span data-stu-id="e8c24-275">DELETE</span></span>|<span data-ttu-id="e8c24-276">{DELETE} 或 {DEL}</span><span class="sxs-lookup"><span data-stu-id="e8c24-276">{DELETE} or {DEL}</span></span>|  
|<span data-ttu-id="e8c24-277">向下键</span><span class="sxs-lookup"><span data-stu-id="e8c24-277">DOWN ARROW</span></span>|<span data-ttu-id="e8c24-278">{DOWN}</span><span class="sxs-lookup"><span data-stu-id="e8c24-278">{DOWN}</span></span>|  
|<span data-ttu-id="e8c24-279">End</span><span class="sxs-lookup"><span data-stu-id="e8c24-279">END</span></span>|<span data-ttu-id="e8c24-280">{END}</span><span class="sxs-lookup"><span data-stu-id="e8c24-280">{END}</span></span>|  
|<span data-ttu-id="e8c24-281">ENTER （数字键盘）</span><span class="sxs-lookup"><span data-stu-id="e8c24-281">ENTER (numeric keypad)</span></span>|<span data-ttu-id="e8c24-282">回车</span><span class="sxs-lookup"><span data-stu-id="e8c24-282">{ENTER}</span></span>|  
|<span data-ttu-id="e8c24-283">Enter</span><span class="sxs-lookup"><span data-stu-id="e8c24-283">ENTER</span></span>|~|  
|<span data-ttu-id="e8c24-284">ESC</span><span class="sxs-lookup"><span data-stu-id="e8c24-284">ESC</span></span>|<span data-ttu-id="e8c24-285">{ESCAPE} 或 {ESC}</span><span class="sxs-lookup"><span data-stu-id="e8c24-285">{ESCAPE} or {ESC}</span></span>|  
|<span data-ttu-id="e8c24-286">帮助</span><span class="sxs-lookup"><span data-stu-id="e8c24-286">HELP</span></span>|<span data-ttu-id="e8c24-287">{HELP}</span><span class="sxs-lookup"><span data-stu-id="e8c24-287">{HELP}</span></span>|  
|<span data-ttu-id="e8c24-288">Home</span><span class="sxs-lookup"><span data-stu-id="e8c24-288">HOME</span></span>|<span data-ttu-id="e8c24-289">{HOME}</span><span class="sxs-lookup"><span data-stu-id="e8c24-289">{HOME}</span></span>|  
|<span data-ttu-id="e8c24-290">Ins</span><span class="sxs-lookup"><span data-stu-id="e8c24-290">INS</span></span>|<span data-ttu-id="e8c24-291">&AMP;</span><span class="sxs-lookup"><span data-stu-id="e8c24-291">{INSERT}</span></span>|  
|<span data-ttu-id="e8c24-292">向左键</span><span class="sxs-lookup"><span data-stu-id="e8c24-292">LEFT ARROW</span></span>|<span data-ttu-id="e8c24-293">{LEFT}</span><span class="sxs-lookup"><span data-stu-id="e8c24-293">{LEFT}</span></span>|  
|<span data-ttu-id="e8c24-294">Num Lock</span><span class="sxs-lookup"><span data-stu-id="e8c24-294">NUM LOCK</span></span>|<span data-ttu-id="e8c24-295">{NUMLOCK}</span><span class="sxs-lookup"><span data-stu-id="e8c24-295">{NUMLOCK}</span></span>|  
|<span data-ttu-id="e8c24-296">Page Down</span><span class="sxs-lookup"><span data-stu-id="e8c24-296">PAGE DOWN</span></span>|<span data-ttu-id="e8c24-297">{PGDN}</span><span class="sxs-lookup"><span data-stu-id="e8c24-297">{PGDN}</span></span>|  
|<span data-ttu-id="e8c24-298">Page Up</span><span class="sxs-lookup"><span data-stu-id="e8c24-298">PAGE UP</span></span>|<span data-ttu-id="e8c24-299">{PGUP}</span><span class="sxs-lookup"><span data-stu-id="e8c24-299">{PGUP}</span></span>|  
|<span data-ttu-id="e8c24-300">RETURN</span><span class="sxs-lookup"><span data-stu-id="e8c24-300">RETURN</span></span>|<span data-ttu-id="e8c24-301">返回</span><span class="sxs-lookup"><span data-stu-id="e8c24-301">{RETURN}</span></span>|  
|<span data-ttu-id="e8c24-302">向右键</span><span class="sxs-lookup"><span data-stu-id="e8c24-302">RIGHT ARROW</span></span>|<span data-ttu-id="e8c24-303">{RIGHT}</span><span class="sxs-lookup"><span data-stu-id="e8c24-303">{RIGHT}</span></span>|  
|<span data-ttu-id="e8c24-304">Scroll Lock</span><span class="sxs-lookup"><span data-stu-id="e8c24-304">SCROLL LOCK</span></span>|<span data-ttu-id="e8c24-305">{SCROLLLOCK}</span><span class="sxs-lookup"><span data-stu-id="e8c24-305">{SCROLLLOCK}</span></span>|  
|<span data-ttu-id="e8c24-306">Tab</span><span class="sxs-lookup"><span data-stu-id="e8c24-306">TAB</span></span>|<span data-ttu-id="e8c24-307">{TAB}</span><span class="sxs-lookup"><span data-stu-id="e8c24-307">{TAB}</span></span>|  
|<span data-ttu-id="e8c24-308">向上键</span><span class="sxs-lookup"><span data-stu-id="e8c24-308">UP ARROW</span></span>|<span data-ttu-id="e8c24-309">{UP}</span><span class="sxs-lookup"><span data-stu-id="e8c24-309">{UP}</span></span>|  
|<span data-ttu-id="e8c24-310">F1 到 F15</span><span class="sxs-lookup"><span data-stu-id="e8c24-310">F1 through F15</span></span>|<span data-ttu-id="e8c24-311">{F1} 到 {F15}</span><span class="sxs-lookup"><span data-stu-id="e8c24-311">{F1} through {F15}</span></span>|  
  
## <a name="availability-by-project-type"></a><span data-ttu-id="e8c24-312">按项目类型的可用性</span><span class="sxs-lookup"><span data-stu-id="e8c24-312">Availability by Project Type</span></span>  
  
|<span data-ttu-id="e8c24-313">项目类型</span><span class="sxs-lookup"><span data-stu-id="e8c24-313">Project type</span></span>|<span data-ttu-id="e8c24-314">可用</span><span class="sxs-lookup"><span data-stu-id="e8c24-314">Available</span></span>|  
|-|-|  
|<span data-ttu-id="e8c24-315">Windows 应用程序</span><span class="sxs-lookup"><span data-stu-id="e8c24-315">Windows Application</span></span>|<span data-ttu-id="e8c24-316">**是**</span><span class="sxs-lookup"><span data-stu-id="e8c24-316">**Yes**</span></span>|  
|<span data-ttu-id="e8c24-317">类库</span><span class="sxs-lookup"><span data-stu-id="e8c24-317">Class Library</span></span>|<span data-ttu-id="e8c24-318">**是**</span><span class="sxs-lookup"><span data-stu-id="e8c24-318">**Yes**</span></span>|  
|<span data-ttu-id="e8c24-319">控制台应用程序</span><span class="sxs-lookup"><span data-stu-id="e8c24-319">Console Application</span></span>|<span data-ttu-id="e8c24-320">**是**</span><span class="sxs-lookup"><span data-stu-id="e8c24-320">**Yes**</span></span>|  
|<span data-ttu-id="e8c24-321">Windows 控件库</span><span class="sxs-lookup"><span data-stu-id="e8c24-321">Windows Control Library</span></span>|<span data-ttu-id="e8c24-322">**是**</span><span class="sxs-lookup"><span data-stu-id="e8c24-322">**Yes**</span></span>|  
|<span data-ttu-id="e8c24-323">Web 控件库</span><span class="sxs-lookup"><span data-stu-id="e8c24-323">Web Control Library</span></span>|<span data-ttu-id="e8c24-324">否</span><span class="sxs-lookup"><span data-stu-id="e8c24-324">No</span></span>|  
|<span data-ttu-id="e8c24-325">Windows 服务</span><span class="sxs-lookup"><span data-stu-id="e8c24-325">Windows Service</span></span>|<span data-ttu-id="e8c24-326">**是**</span><span class="sxs-lookup"><span data-stu-id="e8c24-326">**Yes**</span></span>|  
|<span data-ttu-id="e8c24-327">网站</span><span class="sxs-lookup"><span data-stu-id="e8c24-327">Web Site</span></span>|<span data-ttu-id="e8c24-328">否</span><span class="sxs-lookup"><span data-stu-id="e8c24-328">No</span></span>|  

## Examples  

<span data-ttu-id="e8c24-329">此示例使用 `My.Computer.Keyboard.SendKeys` 方法将击键发送到由 <xref:Microsoft.VisualBasic.Interaction.Shell%2A> 方法启动的外部应用程序（记事本应用程序）。</span><span class="sxs-lookup"><span data-stu-id="e8c24-329">This example uses the `My.Computer.Keyboard.SendKeys` method to send keystrokes to an external application, the Notepad application, started by the <xref:Microsoft.VisualBasic.Interaction.Shell%2A> method.</span></span>
  
[!code-vb[VbVbalrMyComputer#25](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyComputer/VB/Class2.vb#25)]

<span data-ttu-id="e8c24-330">如果找不到具有请求的进程标识符的应用程序，则会引发 <xref:System.ArgumentException> 异常。</span><span class="sxs-lookup"><span data-stu-id="e8c24-330">An <xref:System.ArgumentException> exception is raised if an application with the requested process identifier cannot be found.</span></span>
  
<span data-ttu-id="e8c24-331">调用 <xref:Microsoft.VisualBasic.Interaction.Shell%2A> 方法需要完全信任（<xref:System.Security.SecurityException> 类）。</span><span class="sxs-lookup"><span data-stu-id="e8c24-331">The call to the <xref:Microsoft.VisualBasic.Interaction.Shell%2A> method requires full trust (<xref:System.Security.SecurityException> class).</span></span>
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="e8c24-332">存在部分信任的情况，此时用户缺少足够的权限。</span><span class="sxs-lookup"><span data-stu-id="e8c24-332">A partial-trust situation exists in which the user lacks necessary permissions.</span></span></exception>
        <altmember cref="T:Microsoft.VisualBasic.Devices.Computer" />
        <altmember cref="M:System.Windows.Forms.SendKeys.Send(System.String)" />
        <altmember cref="M:System.Windows.Forms.SendKeys.SendWait(System.String)" />
        <related type="Article" href="~/docs/visual-basic/language-reference/objects/index.md"><span data-ttu-id="e8c24-333">对象 (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="e8c24-333">Objects (Visual Basic)</span></span></related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/computer-resources/accessing-the-keyboard.md"><span data-ttu-id="e8c24-334">访问键盘 (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="e8c24-334">Accessing the Keyboard (Visual Basic)</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/9280ca96-7a93-47a3-8d01-6d01be0657cb"><span data-ttu-id="e8c24-335">演练：调用 Windows API</span><span class="sxs-lookup"><span data-stu-id="e8c24-335">Walkthrough: Calling Windows APIs</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="SendKeys">
      <MemberSignature Language="C#" Value="public void SendKeys (string keys, bool wait);" />
      <MemberSignature Language="ILAsm" Value=".method public instance void SendKeys(string keys, bool wait) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Devices.Keyboard.SendKeys(System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SendKeys (keys As String, wait As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SendKeys(System::String ^ keys, bool wait);" />
      <MemberSignature Language="F#" Value="member this.SendKeys : string * bool -&gt; unit" Usage="keyboard.SendKeys (keys, wait)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Forms</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keys" Type="System.String" />
        <Parameter Name="wait" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="keys"><span data-ttu-id="e8c24-336">一个 <see langword="String" />，定义要发送的键。</span><span class="sxs-lookup"><span data-stu-id="e8c24-336">A <see langword="String" /> that defines the keys to send.</span></span></param>
        <param name="wait"><span data-ttu-id="e8c24-337">可选。</span><span class="sxs-lookup"><span data-stu-id="e8c24-337">Optional.</span></span> <span data-ttu-id="e8c24-338">一个 <see langword="Boolean" /> 值，指定在应用程序继续之前是否等待键击处理完成。</span><span class="sxs-lookup"><span data-stu-id="e8c24-338">A <see langword="Boolean" /> that specifies whether or not to wait for keystrokes to get processed before the application continues.</span></span> <span data-ttu-id="e8c24-339">默认值为 <see langword="True" />。</span><span class="sxs-lookup"><span data-stu-id="e8c24-339"><see langword="True" /> by default.</span></span></param>
        <summary><span data-ttu-id="e8c24-340">向活动窗口发送一个或多个键击，就像在键盘键入一样。</span><span class="sxs-lookup"><span data-stu-id="e8c24-340">Sends one or more keystrokes to the active window, as if typed on the keyboard.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e8c24-341">`My.Computer.Keyboard.SendKeys` 方法提供类似于 <xref:System.Windows.Forms.SendKeys.Send%2A> 和 <xref:System.Windows.Forms.SendKeys.SendWait%2A> 方法的功能。</span><span class="sxs-lookup"><span data-stu-id="e8c24-341">The `My.Computer.Keyboard.SendKeys` method provides functionality similar to the <xref:System.Windows.Forms.SendKeys.Send%2A> and <xref:System.Windows.Forms.SendKeys.SendWait%2A> methods.</span></span>  
  
 <span data-ttu-id="e8c24-342">如果其他应用程序必须在应用程序继续之前完成，则 `wait` 参数非常有用。</span><span class="sxs-lookup"><span data-stu-id="e8c24-342">The `wait` argument is useful if the other application must finish before your application can continue.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="e8c24-343">由于没有用于激活其他应用程序的托管方法，因此你可以在当前应用程序中使用此类，手动选择要将密钥发送到的窗口，或者使用 Windows API 方法（如 `FindWindow` 和 `SetForegroundWindow`）强制集中于其他应用程序。</span><span class="sxs-lookup"><span data-stu-id="e8c24-343">Because there is no managed method to activate another application, you can either use this class within the current application, manually select the window to send the keys to, or use Windows API methods, such as `FindWindow` and `SetForegroundWindow`, to force focus on other applications.</span></span> <span data-ttu-id="e8c24-344">有关详细信息，请参阅[演练：调用 Windows api](~/docs/visual-basic/programming-guide/com-interop/walkthrough-calling-windows-apis.md)。</span><span class="sxs-lookup"><span data-stu-id="e8c24-344">For more information, see [Walkthrough: Calling Windows APIs](~/docs/visual-basic/programming-guide/com-interop/walkthrough-calling-windows-apis.md).</span></span>  
  
 <span data-ttu-id="e8c24-345">`keys` 参数可以指定任何单个键或与 ALT、CTRL 或 SHIFT （或这些键的任意组合）组合的键。</span><span class="sxs-lookup"><span data-stu-id="e8c24-345">The `keys` argument can specify any single key or any key combined with ALT, CTRL, or SHIFT (or any combination of those keys).</span></span> <span data-ttu-id="e8c24-346">每个键由一个或多个字符表示，例如字符 "a" 的 `a` 或 ENTER 键 `{ENTER}`。</span><span class="sxs-lookup"><span data-stu-id="e8c24-346">Each key is represented by one or more characters, such as `a` for the character "a", or `{ENTER}` for the ENTER key.</span></span>  
  
 <span data-ttu-id="e8c24-347">若要将某个键与 SHIFT 组合在一起，请在键代码前面加上 `+` （加号）。</span><span class="sxs-lookup"><span data-stu-id="e8c24-347">To combine a key with SHIFT, precede the key code with `+` (plus sign).</span></span> <span data-ttu-id="e8c24-348">若要将某个键与 CTRL 组合，请在键代码前面加上 `^` （插入符号）。</span><span class="sxs-lookup"><span data-stu-id="e8c24-348">To combine a key with CTRL, precede the key code with `^` (caret).</span></span> <span data-ttu-id="e8c24-349">若要将某个键与 ALT 组合在一起，请在键代码前面加上 `%` （百分号）。</span><span class="sxs-lookup"><span data-stu-id="e8c24-349">To combine a key with ALT, precede the key code with `%` (percent sign).</span></span> <span data-ttu-id="e8c24-350">若要指定重复项，请使用格式 `{`*键号*`}`。</span><span class="sxs-lookup"><span data-stu-id="e8c24-350">To specify repeating keys, use the form `{`*key number*`}`.</span></span> <span data-ttu-id="e8c24-351">必须在*键*和*数字*之间添加一个空格。</span><span class="sxs-lookup"><span data-stu-id="e8c24-351">You must put a space between *key* and *number*.</span></span> <span data-ttu-id="e8c24-352">例如，`{LEFT 42}` 表示 "按左箭头键42次";`{h 10}` 表示 "按" h "10 次"。</span><span class="sxs-lookup"><span data-stu-id="e8c24-352">For example, `{LEFT 42}` means "press the LEFT ARROW key 42 times"; `{h 10}` means "press 'h' 10 times."</span></span>  
  
 <span data-ttu-id="e8c24-353">下表列出了一些代码，这些代码可用于指定在按对应键（例如 ENTER 或 TAB）时不显示的字符。</span><span class="sxs-lookup"><span data-stu-id="e8c24-353">The following table lists the codes that can be used to specify characters that are not displayed when you press the corresponding key (such as ENTER or TAB).</span></span>  
  
|<span data-ttu-id="e8c24-354">键</span><span class="sxs-lookup"><span data-stu-id="e8c24-354">Key</span></span>|<span data-ttu-id="e8c24-355">代码</span><span class="sxs-lookup"><span data-stu-id="e8c24-355">Code</span></span>|  
|-|-|  
|<span data-ttu-id="e8c24-356">Backspace</span><span class="sxs-lookup"><span data-stu-id="e8c24-356">BACKSPACE</span></span>|<span data-ttu-id="e8c24-357">{BACKSPACE} 或 {BS.1770}</span><span class="sxs-lookup"><span data-stu-id="e8c24-357">{BACKSPACE} or {BS}</span></span>|  
|<span data-ttu-id="e8c24-358">BREAK</span><span class="sxs-lookup"><span data-stu-id="e8c24-358">BREAK</span></span>|<span data-ttu-id="e8c24-359">{BREAK}</span><span class="sxs-lookup"><span data-stu-id="e8c24-359">{BREAK}</span></span>|  
|<span data-ttu-id="e8c24-360">Caps Lock</span><span class="sxs-lookup"><span data-stu-id="e8c24-360">CAPS LOCK</span></span>|<span data-ttu-id="e8c24-361">{CAPSLOCK}</span><span class="sxs-lookup"><span data-stu-id="e8c24-361">{CAPSLOCK}</span></span>|  
|<span data-ttu-id="e8c24-362">CLEAR</span><span class="sxs-lookup"><span data-stu-id="e8c24-362">CLEAR</span></span>|<span data-ttu-id="e8c24-363">清除</span><span class="sxs-lookup"><span data-stu-id="e8c24-363">{CLEAR}</span></span>|  
|<span data-ttu-id="e8c24-364">删除</span><span class="sxs-lookup"><span data-stu-id="e8c24-364">DELETE</span></span>|<span data-ttu-id="e8c24-365">{DELETE} 或 {DEL}</span><span class="sxs-lookup"><span data-stu-id="e8c24-365">{DELETE} or {DEL}</span></span>|  
|<span data-ttu-id="e8c24-366">向下键</span><span class="sxs-lookup"><span data-stu-id="e8c24-366">DOWN ARROW</span></span>|<span data-ttu-id="e8c24-367">{DOWN}</span><span class="sxs-lookup"><span data-stu-id="e8c24-367">{DOWN}</span></span>|  
|<span data-ttu-id="e8c24-368">End</span><span class="sxs-lookup"><span data-stu-id="e8c24-368">END</span></span>|<span data-ttu-id="e8c24-369">{END}</span><span class="sxs-lookup"><span data-stu-id="e8c24-369">{END}</span></span>|  
|<span data-ttu-id="e8c24-370">ENTER （数字键盘）</span><span class="sxs-lookup"><span data-stu-id="e8c24-370">ENTER (numeric keypad)</span></span>|<span data-ttu-id="e8c24-371">回车</span><span class="sxs-lookup"><span data-stu-id="e8c24-371">{ENTER}</span></span>|  
|<span data-ttu-id="e8c24-372">Enter</span><span class="sxs-lookup"><span data-stu-id="e8c24-372">ENTER</span></span>|~|  
|<span data-ttu-id="e8c24-373">ESC</span><span class="sxs-lookup"><span data-stu-id="e8c24-373">ESC</span></span>|<span data-ttu-id="e8c24-374">{ESCAPE} 或 {ESC}</span><span class="sxs-lookup"><span data-stu-id="e8c24-374">{ESCAPE} or {ESC}</span></span>|  
|<span data-ttu-id="e8c24-375">帮助</span><span class="sxs-lookup"><span data-stu-id="e8c24-375">HELP</span></span>|<span data-ttu-id="e8c24-376">{HELP}</span><span class="sxs-lookup"><span data-stu-id="e8c24-376">{HELP}</span></span>|  
|<span data-ttu-id="e8c24-377">Home</span><span class="sxs-lookup"><span data-stu-id="e8c24-377">HOME</span></span>|<span data-ttu-id="e8c24-378">{HOME}</span><span class="sxs-lookup"><span data-stu-id="e8c24-378">{HOME}</span></span>|  
|<span data-ttu-id="e8c24-379">Ins</span><span class="sxs-lookup"><span data-stu-id="e8c24-379">INS</span></span>|<span data-ttu-id="e8c24-380">&AMP;</span><span class="sxs-lookup"><span data-stu-id="e8c24-380">{INSERT}</span></span>|  
|<span data-ttu-id="e8c24-381">向左键</span><span class="sxs-lookup"><span data-stu-id="e8c24-381">LEFT ARROW</span></span>|<span data-ttu-id="e8c24-382">{LEFT}</span><span class="sxs-lookup"><span data-stu-id="e8c24-382">{LEFT}</span></span>|  
|<span data-ttu-id="e8c24-383">Num Lock</span><span class="sxs-lookup"><span data-stu-id="e8c24-383">NUM LOCK</span></span>|<span data-ttu-id="e8c24-384">{NUMLOCK}</span><span class="sxs-lookup"><span data-stu-id="e8c24-384">{NUMLOCK}</span></span>|  
|<span data-ttu-id="e8c24-385">Page Down</span><span class="sxs-lookup"><span data-stu-id="e8c24-385">PAGE DOWN</span></span>|<span data-ttu-id="e8c24-386">{PGDN}</span><span class="sxs-lookup"><span data-stu-id="e8c24-386">{PGDN}</span></span>|  
|<span data-ttu-id="e8c24-387">Page Up</span><span class="sxs-lookup"><span data-stu-id="e8c24-387">PAGE UP</span></span>|<span data-ttu-id="e8c24-388">{PGUP}</span><span class="sxs-lookup"><span data-stu-id="e8c24-388">{PGUP}</span></span>|  
|<span data-ttu-id="e8c24-389">RETURN</span><span class="sxs-lookup"><span data-stu-id="e8c24-389">RETURN</span></span>|<span data-ttu-id="e8c24-390">返回</span><span class="sxs-lookup"><span data-stu-id="e8c24-390">{RETURN}</span></span>|  
|<span data-ttu-id="e8c24-391">向右键</span><span class="sxs-lookup"><span data-stu-id="e8c24-391">RIGHT ARROW</span></span>|<span data-ttu-id="e8c24-392">{RIGHT}</span><span class="sxs-lookup"><span data-stu-id="e8c24-392">{RIGHT}</span></span>|  
|<span data-ttu-id="e8c24-393">Scroll Lock</span><span class="sxs-lookup"><span data-stu-id="e8c24-393">SCROLL LOCK</span></span>|<span data-ttu-id="e8c24-394">{SCROLLLOCK}</span><span class="sxs-lookup"><span data-stu-id="e8c24-394">{SCROLLLOCK}</span></span>|  
|<span data-ttu-id="e8c24-395">Tab</span><span class="sxs-lookup"><span data-stu-id="e8c24-395">TAB</span></span>|<span data-ttu-id="e8c24-396">{TAB}</span><span class="sxs-lookup"><span data-stu-id="e8c24-396">{TAB}</span></span>|  
|<span data-ttu-id="e8c24-397">向上键</span><span class="sxs-lookup"><span data-stu-id="e8c24-397">UP ARROW</span></span>|<span data-ttu-id="e8c24-398">{UP}</span><span class="sxs-lookup"><span data-stu-id="e8c24-398">{UP}</span></span>|  
|<span data-ttu-id="e8c24-399">F1 到 F15</span><span class="sxs-lookup"><span data-stu-id="e8c24-399">F1 through F15</span></span>|<span data-ttu-id="e8c24-400">{F1} 到 {F15}</span><span class="sxs-lookup"><span data-stu-id="e8c24-400">{F1} through {F15}</span></span>|  
  
## <a name="availability-by-project-type"></a><span data-ttu-id="e8c24-401">按项目类型的可用性</span><span class="sxs-lookup"><span data-stu-id="e8c24-401">Availability by Project Type</span></span>  
  
|<span data-ttu-id="e8c24-402">项目类型</span><span class="sxs-lookup"><span data-stu-id="e8c24-402">Project type</span></span>|<span data-ttu-id="e8c24-403">可用</span><span class="sxs-lookup"><span data-stu-id="e8c24-403">Available</span></span>|  
|-|-|  
|<span data-ttu-id="e8c24-404">Windows 应用程序</span><span class="sxs-lookup"><span data-stu-id="e8c24-404">Windows Application</span></span>|<span data-ttu-id="e8c24-405">**是**</span><span class="sxs-lookup"><span data-stu-id="e8c24-405">**Yes**</span></span>|  
|<span data-ttu-id="e8c24-406">类库</span><span class="sxs-lookup"><span data-stu-id="e8c24-406">Class Library</span></span>|<span data-ttu-id="e8c24-407">**是**</span><span class="sxs-lookup"><span data-stu-id="e8c24-407">**Yes**</span></span>|  
|<span data-ttu-id="e8c24-408">控制台应用程序</span><span class="sxs-lookup"><span data-stu-id="e8c24-408">Console Application</span></span>|<span data-ttu-id="e8c24-409">**是**</span><span class="sxs-lookup"><span data-stu-id="e8c24-409">**Yes**</span></span>|  
|<span data-ttu-id="e8c24-410">Windows 控件库</span><span class="sxs-lookup"><span data-stu-id="e8c24-410">Windows Control Library</span></span>|<span data-ttu-id="e8c24-411">**是**</span><span class="sxs-lookup"><span data-stu-id="e8c24-411">**Yes**</span></span>|  
|<span data-ttu-id="e8c24-412">Web 控件库</span><span class="sxs-lookup"><span data-stu-id="e8c24-412">Web Control Library</span></span>|<span data-ttu-id="e8c24-413">否</span><span class="sxs-lookup"><span data-stu-id="e8c24-413">No</span></span>|  
|<span data-ttu-id="e8c24-414">Windows 服务</span><span class="sxs-lookup"><span data-stu-id="e8c24-414">Windows Service</span></span>|<span data-ttu-id="e8c24-415">**是**</span><span class="sxs-lookup"><span data-stu-id="e8c24-415">**Yes**</span></span>|  
|<span data-ttu-id="e8c24-416">网站</span><span class="sxs-lookup"><span data-stu-id="e8c24-416">Web Site</span></span>|<span data-ttu-id="e8c24-417">否</span><span class="sxs-lookup"><span data-stu-id="e8c24-417">No</span></span>|  

## Examples

<span data-ttu-id="e8c24-418">此示例使用 `My.Computer.Keyboard.SendKeys` 方法将击键发送到由 <xref:Microsoft.VisualBasic.Interaction.Shell%2A> 方法启动的外部应用程序（记事本应用程序）。</span><span class="sxs-lookup"><span data-stu-id="e8c24-418">This example uses the `My.Computer.Keyboard.SendKeys` method to send keystrokes to an external application, the Notepad application, started by the <xref:Microsoft.VisualBasic.Interaction.Shell%2A> method.</span></span>
  
[!code-vb[VbVbalrMyComputer#25](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyComputer/VB/Class2.vb#25)]

<span data-ttu-id="e8c24-419">如果找不到具有请求的进程标识符的应用程序，则会引发 <xref:System.ArgumentException> 异常。</span><span class="sxs-lookup"><span data-stu-id="e8c24-419">An <xref:System.ArgumentException> exception is raised if an application with the requested process identifier cannot be found.</span></span>
  
<span data-ttu-id="e8c24-420">调用 <xref:Microsoft.VisualBasic.Interaction.Shell%2A> 方法需要完全信任（<xref:System.Security.SecurityException> 类）。</span><span class="sxs-lookup"><span data-stu-id="e8c24-420">The call to the <xref:Microsoft.VisualBasic.Interaction.Shell%2A> method requires full trust (<xref:System.Security.SecurityException> class).</span></span>
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="e8c24-421">存在部分信任的情况，此时用户缺少足够的权限。</span><span class="sxs-lookup"><span data-stu-id="e8c24-421">A partial-trust situation exists in which the user lacks necessary permissions.</span></span></exception>
        <altmember cref="T:Microsoft.VisualBasic.Devices.Computer" />
        <altmember cref="M:System.Windows.Forms.SendKeys.Send(System.String)" />
        <altmember cref="M:System.Windows.Forms.SendKeys.SendWait(System.String)" />
        <related type="Article" href="~/docs/visual-basic/language-reference/objects/index.md"><span data-ttu-id="e8c24-422">对象 (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="e8c24-422">Objects (Visual Basic)</span></span></related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/computer-resources/accessing-the-keyboard.md"><span data-ttu-id="e8c24-423">访问键盘 (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="e8c24-423">Accessing the Keyboard (Visual Basic)</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/9280ca96-7a93-47a3-8d01-6d01be0657cb"><span data-ttu-id="e8c24-424">演练：调用 Windows API</span><span class="sxs-lookup"><span data-stu-id="e8c24-424">Walkthrough: Calling Windows APIs</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="ShiftKeyDown">
      <MemberSignature Language="C#" Value="public bool ShiftKeyDown { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ShiftKeyDown" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.Devices.Keyboard.ShiftKeyDown" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ShiftKeyDown As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ShiftKeyDown { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.ShiftKeyDown : bool" Usage="Microsoft.VisualBasic.Devices.Keyboard.ShiftKeyDown" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Forms</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e8c24-425">获取一个值，该值指示是否已按下 Shift。</span><span class="sxs-lookup"><span data-stu-id="e8c24-425">Gets a value that indicates whether a SHIFT key is down.</span></span></summary>
        <value><span data-ttu-id="e8c24-426"><see langword="True" /> 如果 SHIFT 键关闭，则为; 否则为。否则，<see langword="False" />。</span><span class="sxs-lookup"><span data-stu-id="e8c24-426"><see langword="True" /> if a SHIFT key is down; otherwise, <see langword="False" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e8c24-427">`My.Computer.Keyboard.ShiftKeyDown` 属性提供类似于 <xref:System.Windows.Forms.Control.ModifierKeys%2A> 属性的功能。</span><span class="sxs-lookup"><span data-stu-id="e8c24-427">The `My.Computer.Keyboard.ShiftKeyDown` property provides functionality similar to the <xref:System.Windows.Forms.Control.ModifierKeys%2A> property.</span></span>  
  
## <a name="availability-by-project-type"></a><span data-ttu-id="e8c24-428">按项目类型的可用性</span><span class="sxs-lookup"><span data-stu-id="e8c24-428">Availability by Project Type</span></span>  
  
|<span data-ttu-id="e8c24-429">项目类型</span><span class="sxs-lookup"><span data-stu-id="e8c24-429">Project type</span></span>|<span data-ttu-id="e8c24-430">可用</span><span class="sxs-lookup"><span data-stu-id="e8c24-430">Available</span></span>|  
|-|-|  
|<span data-ttu-id="e8c24-431">Windows 应用程序</span><span class="sxs-lookup"><span data-stu-id="e8c24-431">Windows Application</span></span>|<span data-ttu-id="e8c24-432">**是**</span><span class="sxs-lookup"><span data-stu-id="e8c24-432">**Yes**</span></span>|  
|<span data-ttu-id="e8c24-433">类库</span><span class="sxs-lookup"><span data-stu-id="e8c24-433">Class Library</span></span>|<span data-ttu-id="e8c24-434">**是**</span><span class="sxs-lookup"><span data-stu-id="e8c24-434">**Yes**</span></span>|  
|<span data-ttu-id="e8c24-435">控制台应用程序</span><span class="sxs-lookup"><span data-stu-id="e8c24-435">Console Application</span></span>|<span data-ttu-id="e8c24-436">**是**</span><span class="sxs-lookup"><span data-stu-id="e8c24-436">**Yes**</span></span>|  
|<span data-ttu-id="e8c24-437">Windows 控件库</span><span class="sxs-lookup"><span data-stu-id="e8c24-437">Windows Control Library</span></span>|<span data-ttu-id="e8c24-438">**是**</span><span class="sxs-lookup"><span data-stu-id="e8c24-438">**Yes**</span></span>|  
|<span data-ttu-id="e8c24-439">Web 控件库</span><span class="sxs-lookup"><span data-stu-id="e8c24-439">Web Control Library</span></span>|<span data-ttu-id="e8c24-440">否</span><span class="sxs-lookup"><span data-stu-id="e8c24-440">No</span></span>|  
|<span data-ttu-id="e8c24-441">Windows 服务</span><span class="sxs-lookup"><span data-stu-id="e8c24-441">Windows Service</span></span>|<span data-ttu-id="e8c24-442">**是**</span><span class="sxs-lookup"><span data-stu-id="e8c24-442">**Yes**</span></span>|  
|<span data-ttu-id="e8c24-443">网站</span><span class="sxs-lookup"><span data-stu-id="e8c24-443">Web Site</span></span>|<span data-ttu-id="e8c24-444">否</span><span class="sxs-lookup"><span data-stu-id="e8c24-444">No</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="e8c24-445">此示例使用 `My.Computer.Keyboard.ShiftKeyDown` 属性来确定计算机的 SHIFT 键是否已关闭。</span><span class="sxs-lookup"><span data-stu-id="e8c24-445">This example uses the `My.Computer.Keyboard.ShiftKeyDown` property to determine if one of the computer's SHIFT keys is down.</span></span>  
  
 [!code-vb[VbVbalrMyComputer#47](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyComputer/VB/Class2.vb#47)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.Devices.Computer" />
        <altmember cref="P:System.Windows.Forms.Control.ModifierKeys" />
        <related type="Article" href="~/docs/visual-basic/language-reference/objects/index.md"><span data-ttu-id="e8c24-446">对象 (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="e8c24-446">Objects (Visual Basic)</span></span></related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/computer-resources/accessing-the-keyboard.md"><span data-ttu-id="e8c24-447">访问键盘 (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="e8c24-447">Accessing the Keyboard (Visual Basic)</span></span></related>
      </Docs>
    </Member>
  </Members>
</Type>
